import { firebaseStorage } from './firebaseStorage';
import { storage as memoryStorage } from './storage';
import { FIREBASE_CONFIG } from './firebaseSetup';

export async function createTestAccounts() {
  console.log('üîß Cr√©ation/v√©rification des comptes de test...');
  
  // üîÑ CHARGEMENT DES SALONS DEPUIS POSTGRESQL AU D√âMARRAGE
  console.log('üìö Chargement des salons depuis PostgreSQL...');
  await memoryStorage.loadSalonsFromDatabase();
  
  try {
    // Forcer la cr√©ation de nouveaux comptes avec mots de passe hach√©s valides
    console.log('üõ†Ô∏è Cr√©ation compte PRO de test...');
    try {
      await memoryStorage.createUser({
        email: 'test@monapp.com',
        password: 'test1234',
        firstName: 'Excellence',
        lastName: 'Paris',
        businessName: 'Salon Excellence Paris',
        phone: '01 42 86 75 90',
        address: '15 Rue de la Paix, 75001 Paris'
      });
      console.log('‚úÖ Compte PRO cr√©√©: test@monapp.com / test1234');
    } catch (error) {
      console.log('‚ÑπÔ∏è Compte PRO existe d√©j√† ou cr√©√© pr√©c√©demment');
    }

    console.log('üõ†Ô∏è Cr√©ation compte CLIENT de test...');
    try {
      await memoryStorage.createClientAccount({
        email: 'client@test.com',
        password: 'client123',
        firstName: 'Marie',
        lastName: 'Client'
      });
      console.log('‚úÖ Compte CLIENT cr√©√©: client@test.com / client123');
    } catch (error) {
      console.log('‚ÑπÔ∏è Compte CLIENT existe d√©j√† ou cr√©√© pr√©c√©demment');
    }
    

    
    // Cr√©er des donn√©es de salon pour le test avec sauvegarde PostgreSQL
    const salonData = {
      id: 'salon-demo',
      name: 'Salon Excellence Paris',
      address: '15 Rue de la Paix, 75001 Paris',
      phone: '01 42 86 75 90',
      description: 'Salon de beaut√© haut de gamme au c≈ìur de Paris',
      longDescription: 'D√©couvrez notre salon de beaut√© d\'exception situ√© rue de la Paix. Nos experts vous accueillent dans un cadre luxueux pour des prestations sur-mesure.',
      rating: 4.8,
      reviewCount: 127,
      serviceCategories: [
        {
          id: 1,
          name: 'Coiffure',
          expanded: false,
          services: [
            {
              id: 1,
              name: 'Coupe + Brushing Premium',
              price: 85,
              duration: '1h',
              description: 'Coupe personnalis√©e avec brushing professionnel'
            },
            {
              id: 2,
              name: 'Coloration Compl√®te',
              price: 120,
              duration: '2h',
              description: 'Coloration haut de gamme avec soins'
            }
          ]
        },
        {
          id: 2,
          name: 'Esth√©tique',
          expanded: false,
          services: [
            {
              id: 3,
              name: 'Soin Visage Anti-√Çge',
              price: 95,
              duration: '1h15',
              description: 'Soin premium hydratant et raffermissant'
            }
          ]
        }
      ],
      certifications: [
        'Salon Certifi√© L\'Or√©al Professionnel',
        'Expert Coloriste Certifi√©',
        'Formation Continue Sothys'
      ],
      awards: [
        'Prix du Meilleur Salon 2024 - Paris 1er',
        'Excellence Service Client 2023',
        'Salon √âco-Responsable Certifi√©'
      ],
      customColors: {
        primary: '#7c3aed',
        accent: '#a855f7',
        buttonText: '#ffffff',
        priceColor: '#7c3aed',
        neonFrame: '#a855f7'
      },
      isPublished: true
    };
    
    // Sauvegarder en m√©moire ET PostgreSQL
    await memoryStorage.saveSalonData('salon-demo', salonData);
    if (memoryStorage.updateSalon) {
      await memoryStorage.updateSalon('salon-demo', salonData);
      console.log('üíæ Salon sauvegard√© en PostgreSQL pour persistance');
    }
    
    console.log('üíé SALON DEMO: salon-demo cr√©√© avec donn√©es compl√®tes');
    
  } catch (error) {
    console.error('‚ùå Erreur lors de la cr√©ation des comptes de test:', error);
  }
}