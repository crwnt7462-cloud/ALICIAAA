import { useState } from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import { Badge } from "@/components/ui/badge";
import { useToast } from "@/hooks/use-toast";

interface ChatMessage {
  id: string;
  role: 'user' | 'assistant';
  content: string;
  timestamp: Date;
}

interface AIService {
  id: string;
  name: string;
  description: string;
  category: 'optimisation' | 'marketing' | 'description' | 'promotion';
  isActive: boolean;
}

export default function AIProComplete() {
  const [messages, setMessages] = useState<ChatMessage[]>([]);

  const [currentMessage, setCurrentMessage] = useState("");
  const [isLoading, setIsLoading] = useState(false);
  const [activeTab, setActiveTab] = useState<'chat' | 'services' | 'suggestions'>('chat');
  const { toast } = useToast();

  const aiServices: AIService[] = [
    {
      id: 'optimize-description',
      name: 'Optimiser la description du salon',
      description: 'Am√©liore automatiquement la description de votre salon pour attirer plus de clients',
      category: 'description',
      isActive: true
    },
    {
      id: 'generate-promotion',
      name: 'G√©n√©rer des promotions',
      description: 'Cr√©e des offres promotionnelles personnalis√©es selon vos services',
      category: 'promotion',
      isActive: true
    },
    {
      id: 'optimize-tags',
      name: 'Optimiser les tags',
      description: 'Sugg√®re des mots-cl√©s pertinents pour am√©liorer votre visibilit√©',
      category: 'optimisation',
      isActive: true
    },
    {
      id: 'marketing-messages',
      name: 'Messages marketing',
      description: 'G√©n√®re des messages personnalis√©s pour vos campagnes marketing',
      category: 'marketing',
      isActive: true
    }
  ];

  const suggestions = [
    {
      title: "Optimisation planning",
      description: "Analyser votre planning pour identifier les cr√©neaux optimaux",
      action: "Analyser mon planning"
    },
    {
      title: "Description salon",
      description: "Am√©liorer la description de votre salon pour attirer plus de clients",
      action: "Optimiser ma description"
    },
    {
      title: "Promo personnalis√©e",
      description: "Cr√©er une promotion cibl√©e selon votre client√®le",
      action: "Cr√©er une promotion"
    },
    {
      title: "Messages clients",
      description: "G√©n√©rer des messages de rappel et de fid√©lisation",
      action: "G√©n√©rer des messages"
    }
  ];

  const handleSendMessage = async () => {
    if (!currentMessage.trim()) return;

    const userMessage: ChatMessage = {
      id: Date.now().toString(),
      role: 'user',
      content: currentMessage.trim(),
      timestamp: new Date()
    };

    setMessages(prev => [...prev, userMessage]);
    setCurrentMessage("");
    setIsLoading(true);

    try {
      // Simulation d'une r√©ponse de l'IA bas√©e sur le message
      const response = await generateAIResponse(userMessage.content);
      
      const aiMessage: ChatMessage = {
        id: (Date.now() + 1).toString(),
        role: 'assistant',
        content: response,
        timestamp: new Date()
      };

      setMessages(prev => [...prev, aiMessage]);
    } catch (error) {
      console.error("Error sending message:", error);
      toast({
        title: "Erreur",
        description: "Impossible d'envoyer le message",
        variant: "destructive",
      });
    } finally {
      setIsLoading(false);
    }
  };

  const generateAIResponse = async (userInput: string): Promise<string> => {
    // Simulation de r√©ponses intelligentes bas√©es sur les mots-cl√©s
    const lowerInput = userInput.toLowerCase();
    
    if (lowerInput.includes('description') || lowerInput.includes('pr√©sent')) {
      return `Voici une description optimis√©e pour votre salon :

"üåü **Mon Salon de Beaut√©** - Votre oasis de beaut√© au c≈ìur de Paris

D√©couvrez une exp√©rience beaut√© unique dans notre salon premium. Nos experts certifi√©s vous offrent des prestations haut de gamme dans un cadre moderne et relaxant.

‚ú® **Nos sp√©cialit√©s :**
‚Ä¢ Coiffure tendance et soins capillaires
‚Ä¢ Soins visage personnalis√©s 
‚Ä¢ Manucure & p√©dicure professionnelle
‚Ä¢ Maquillage √©v√©nementiel

üéØ **Pourquoi nous choisir :**
‚Ä¢ √âquipe d'experts qualifi√©s
‚Ä¢ Produits professionnels premium
‚Ä¢ Ambiance d√©tendue et chaleureuse
‚Ä¢ R√©sultats garantis satisfaction

üìç Situ√© dans le 1er arrondissement, facilement accessible
‚è∞ Ouvert 7j/7 sur rendez-vous

Prenez rendez-vous d√®s maintenant et offrez-vous le meilleur de la beaut√© !"

Cette description met en avant vos points forts et incite √† l'action. Souhaitez-vous que je l'adapte davantage ?`;
    }
    
    if (lowerInput.includes('promotion') || lowerInput.includes('offre')) {
      return `üéÅ **Voici 3 promotions personnalis√©es pour votre salon :**

**1. Offre D√©couverte Nouvelle Cliente**
‚Ä¢ -30% sur la premi√®re prestation
‚Ä¢ Valable pour toute nouvelle cliente
‚Ä¢ Code : BIENVENUE30
‚Ä¢ Dur√©e : 1 mois

**2. Package Beaut√© Compl√®te**
‚Ä¢ Coiffure + Soin visage + Manucure : 120‚Ç¨ TTC au lieu de 150‚Ç¨ TTC
‚Ä¢ √âconomie de 30‚Ç¨ TTC
‚Ä¢ Parfait pour les occasions sp√©ciales

**3. Abonnement Fid√©lit√©**
‚Ä¢ 5 prestations achet√©es = 1 offerte
‚Ä¢ Carte de fid√©lit√© digitale
‚Ä¢ R√©ductions progressives selon le nombre de visites

Ces promotions sont con√ßues pour attirer de nouvelles clientes et fid√©liser les existantes. Laquelle vous int√©resse le plus ?`;
    }
    
    if (lowerInput.includes('planning') || lowerInput.includes('cr√©neaux')) {
      return `üìä **Analyse de votre planning :**

**Observations :**
‚Ä¢ Taux d'occupation optimal : 14h-17h (85%)
‚Ä¢ Cr√©neaux sous-exploit√©s : 9h-11h (45%)
‚Ä¢ Forte demande : vendredi-samedi (90%)

**Recommandations IA :**

1. **Optimiser les matin√©es** : Proposer des promotions "Matinale" (-15% avant 11h)

2. **√âquilibrer la semaine** : Offres sp√©ciales mardi-jeudi pour r√©partir l'affluence

3. **Services rapides** : Cr√©er des cr√©neaux express (30min) pour optimiser les temps morts

4. **R√©servation intelligente** : Proposer automatiquement les cr√©neaux libres proches

**Impact estim√© :** +20% de CA mensuel avec une meilleure r√©partition

Souhaitez-vous que je g√©n√®re des messages automatiques pour promouvoir ces cr√©neaux ?`;
    }
    
    if (lowerInput.includes('tag') || lowerInput.includes('mot')) {
      return `üè∑Ô∏è **Tags optimis√©s pour votre salon :**

**Tags SEO principaux :**
‚Ä¢ salon-coiffure-paris
‚Ä¢ institut-beaute-premium  
‚Ä¢ coiffeur-expert-paris-1er
‚Ä¢ soins-visage-professionnel
‚Ä¢ manucure-gel-paris

**Tags client√®le :**
‚Ä¢ #Beaut√©Parisienne
‚Ä¢ #CoiffureHauteCouture
‚Ä¢ #SoinsPremium
‚Ä¢ #ExpertBeaut√©
‚Ä¢ #MonSalonBeaute

**Tags services :**
‚Ä¢ balayage-professionnel
‚Ä¢ lissage-bresilien
‚Ä¢ soin-anti-age
‚Ä¢ maquillage-mariage
‚Ä¢ onglerie-gel

**Tags g√©olocalis√©s :**
‚Ä¢ beaut√©-chatelet
‚Ä¢ salon-louvre
‚Ä¢ coiffeur-rivoli
‚Ä¢ institut-tuileries

Ces tags am√©lioreront votre visibilit√© en ligne de 40%. Voulez-vous que j'en g√©n√®re d'autres pour des services sp√©cifiques ?`;
    }

    // R√©ponse g√©n√©rale
    return `Je comprends votre demande. En tant qu'IA sp√©cialis√©e dans les salons de beaut√©, je peux vous aider avec :

‚Ä¢ **Optimisation** : Planning, descriptions, tarifs
‚Ä¢ **Marketing** : Promotions, campagnes, messages clients  
‚Ä¢ **Gestion** : Analyse de performances, conseils strat√©giques
‚Ä¢ **Contenu** : Descriptions, tags, posts r√©seaux sociaux

Pouvez-vous me donner plus de d√©tails sur ce que vous souhaitez am√©liorer ? Je pourrai ainsi vous fournir des conseils plus pr√©cis et personnalis√©s.`;
  };

  const handleQuickAction = (action: string) => {
    setCurrentMessage(action);
    handleSendMessage();
  };

  const getCategoryColor = (category: string) => {
    switch (category) {
      case 'optimisation': return 'bg-blue-100 text-blue-800';
      case 'marketing': return 'bg-green-100 text-green-800';
      case 'description': return 'bg-purple-100 text-purple-800';
      case 'promotion': return 'bg-orange-100 text-orange-800';
      default: return 'bg-gray-100 text-gray-800';
    }
  };

  return (
    <div className="container mx-auto p-6">
      <div className="mb-6">
        <h1 className="text-2xl font-bold mb-2">IA Pro - Assistant Intelligent</h1>
        <p className="text-gray-600">
          Votre assistant IA pour optimiser votre salon et am√©liorer vos performances.
        </p>
      </div>

      {/* Navigation par onglets */}
      <div className="flex gap-2 mb-6">
        <Button
          variant={activeTab === 'chat' ? 'default' : 'outline'}
          onClick={() => setActiveTab('chat')}
          className="rounded-xl"
        >
          Chat IA
        </Button>
        <Button
          variant={activeTab === 'services' ? 'default' : 'outline'}
          onClick={() => setActiveTab('services')}
          className="rounded-xl"
        >
          Services IA
        </Button>
        <Button
          variant={activeTab === 'suggestions' ? 'default' : 'outline'}
          onClick={() => setActiveTab('suggestions')}
          className="rounded-xl"
        >
          Suggestions
        </Button>
      </div>

      {/* Onglet Chat */}
      {activeTab === 'chat' && (
        <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
          {/* Zone de chat */}
          <div className="lg:col-span-2">
            <Card className="border border-gray-200 rounded-xl shadow-sm h-[600px] flex flex-col">
              <CardHeader>
                <CardTitle>Assistant IA</CardTitle>
              </CardHeader>
              <CardContent className="flex-1 flex flex-col">
                {/* Messages */}
                <div className="flex-1 overflow-y-auto space-y-4 mb-4 max-h-[400px]">
                  {messages.map((message) => (
                    <div
                      key={message.id}
                      className={`flex ${message.role === 'user' ? 'justify-end' : 'justify-start'}`}
                    >
                      <div
                        className={`max-w-[80%] p-3 rounded-xl ${
                          message.role === 'user'
                            ? 'bg-purple-600 text-white'
                            : 'bg-gray-100 text-gray-900'
                        }`}
                      >
                        <div className="whitespace-pre-wrap">{message.content}</div>
                        <div
                          className={`text-xs mt-1 ${
                            message.role === 'user' ? 'text-purple-200' : 'text-gray-500'
                          }`}
                        >
                          {message.timestamp.toLocaleTimeString()}
                        </div>
                      </div>
                    </div>
                  ))}
                  {isLoading && (
                    <div className="flex justify-start">
                      <div className="bg-gray-100 text-gray-900 p-3 rounded-xl">
                        <div className="flex items-center space-x-2">
                          <div className="w-2 h-2 bg-gray-400 rounded-full animate-bounce"></div>
                          <div className="w-2 h-2 bg-gray-400 rounded-full animate-bounce" style={{ animationDelay: '0.1s' }}></div>
                          <div className="w-2 h-2 bg-gray-400 rounded-full animate-bounce" style={{ animationDelay: '0.2s' }}></div>
                        </div>
                      </div>
                    </div>
                  )}
                </div>

                {/* Zone de saisie */}
                <div className="flex gap-2">
                  <Input
                    value={currentMessage}
                    onChange={(e) => setCurrentMessage(e.target.value)}
                    placeholder="Posez votre question √† l'IA..."
                    onKeyPress={(e) => e.key === 'Enter' && handleSendMessage()}
                    className="rounded-xl"
                  />
                  <Button
                    onClick={handleSendMessage}
                    disabled={isLoading || !currentMessage.trim()}
                    className="bg-purple-600 hover:bg-purple-700 rounded-xl"
                  >
                    Envoyer
                  </Button>
                </div>
              </CardContent>
            </Card>
          </div>

          {/* Actions rapides */}
          <div>
            <Card className="border border-gray-200 rounded-xl shadow-sm">
              <CardHeader>
                <CardTitle>Actions Rapides</CardTitle>
              </CardHeader>
              <CardContent className="space-y-3">
                {suggestions.map((suggestion, index) => (
                  <Button
                    key={index}
                    variant="outline"
                    className="w-full text-left justify-start h-auto p-3 border border-gray-200 rounded-xl"
                    onClick={() => handleQuickAction(suggestion.action)}
                  >
                    <div>
                      <div className="font-medium">{suggestion.title}</div>
                      <div className="text-xs text-gray-500 mt-1">
                        {suggestion.description}
                      </div>
                    </div>
                  </Button>
                ))}
              </CardContent>
            </Card>
          </div>
        </div>
      )}

      {/* Onglet Services IA */}
      {activeTab === 'services' && (
        <div className="grid gap-6 md:grid-cols-2">
          {aiServices.map((service) => (
            <Card key={service.id} className="border border-gray-200 rounded-xl shadow-sm">
              <CardHeader>
                <div className="flex justify-between items-start">
                  <CardTitle className="text-lg">{service.name}</CardTitle>
                  <Badge className={getCategoryColor(service.category)}>
                    {service.category}
                  </Badge>
                </div>
              </CardHeader>
              <CardContent>
                <p className="text-gray-600 mb-4">{service.description}</p>
                <Button
                  className="w-full bg-purple-600 hover:bg-purple-700 rounded-xl"
                  onClick={() => {
                    setActiveTab('chat');
                    handleQuickAction(service.name);
                  }}
                >
                  Utiliser ce service
                </Button>
              </CardContent>
            </Card>
          ))}
        </div>
      )}

      {/* Onglet Suggestions */}
      {activeTab === 'suggestions' && (
        <div className="space-y-6">
          <Card className="border border-gray-200 rounded-xl shadow-sm">
            <CardHeader>
              <CardTitle>Recommandations IA Personnalis√©es</CardTitle>
            </CardHeader>
            <CardContent className="space-y-4">
              <div className="p-4 bg-blue-50 rounded-xl border border-blue-200">
                <h4 className="font-semibold text-blue-900 mb-2">üí° Optimisation du Planning</h4>
                <p className="text-blue-800 text-sm mb-3">
                  Vos cr√©neaux 9h-11h sont sous-exploit√©s (45% d'occupation). 
                  Une promotion "Matinale" pourrait augmenter votre CA de 15%.
                </p>
                <Button size="sm" className="bg-blue-600 hover:bg-blue-700 rounded-xl">
                  Cr√©er la promotion
                </Button>
              </div>

              <div className="p-4 bg-green-50 rounded-xl border border-green-200">
                <h4 className="font-semibold text-green-900 mb-2">üìä Performance des Services</h4>
                <p className="text-green-800 text-sm mb-3">
                  Vos soins visage g√©n√®rent le meilleur taux de satisfaction (4.8/5). 
                  Mettre ce service en avant pourrait attirer plus de clientes.
                </p>
                <Button size="sm" className="bg-green-600 hover:bg-green-700 rounded-xl">
                  Optimiser la visibilit√©
                </Button>
              </div>

              <div className="p-4 bg-purple-50 rounded-xl border border-purple-200">
                <h4 className="font-semibold text-purple-900 mb-2">üè∑Ô∏è Am√©lioration SEO</h4>
                <p className="text-purple-800 text-sm mb-3">
                  Ajouter 5 mots-cl√©s cibl√©s pourrait am√©liorer votre visibilit√© en ligne de 30%.
                </p>
                <Button size="sm" className="bg-purple-600 hover:bg-purple-700 rounded-xl">
                  G√©n√©rer les tags
                </Button>
              </div>

              <div className="p-4 bg-orange-50 rounded-xl border border-orange-200">
                <h4 className="font-semibold text-orange-900 mb-2">üíå Fid√©lisation Client</h4>
                <p className="text-orange-800 text-sm mb-3">
                  47% de vos clientes n'ont pas pris de RDV depuis 3 mois. 
                  Une campagne de rappel personnalis√©e pourrait les reconqu√©rir.
                </p>
                <Button size="sm" className="bg-orange-600 hover:bg-orange-700 rounded-xl">
                  Cr√©er la campagne
                </Button>
              </div>
            </CardContent>
          </Card>
        </div>
      )}
    </div>
  );
}